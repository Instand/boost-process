# Copyright (c) 2006, 2007 Julio M. Merino Vidal
# Copyright (c) 2008 Ilya Sokolov, Boris Schaeling
# Copyright (c) 2009 Boris Schaeling
# Copyright (c) 2010 Felipe Tanus, Boris Schaeling
# Copyright (c) 2011, 2012 Jeff Flinn, Boris Schaeling
# Copyright (c) 2016 Klemens D. Morgenstern
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)


import os ;

if [ os.name ] = NT
{
  lib ws2_32 ;
  lib shell32 ;
  lib Advapi32 ;
}

project : requirements
  <define>BOOST_ASIO_NO_DEPRECATED
  <toolset>msvc:<define>_SCL_SECURE_NO_WARNINGS
  <toolset>msvc:<define>_CRT_SECURE_NO_DEPRECATE
  <toolset>msvc:<cxxflags>/bigobj
  <target-os>windows:<define>WIN32_LEAN_AND_MEAN
  <target-os>linux:<linkflags>-lpthread
  <os>NT,<toolset>cw:<library>ws2_32
  <os>NT,<toolset>gcc:<library>ws2_32
;



import testing ;


alias program_options  : /boost//program_options : <link>static ;
alias filesystem       : /boost//filesystem      ;
alias iostreams        : /boost//iostreams       ;
alias system           : /boost//system          ;
alias thread           : /boost//thread          ;
alias coroutine        : /boost//coroutine       : <link>static ;

lib multi_ref : multi_ref1.cpp multi_ref2.cpp system : <target-os>windows:<source>shell32 ;

exe sparring_partner : sparring_partner.cpp program_options system filesystem iostreams :
    <warnings>off <target-os>windows:<source>shell32
    ;

exe exit_argc : exit_argc.cpp :
    <warnings>off <target-os>windows:<source>shell32
    ;

exe sub_launch : sub_launcher.cpp program_options iostreams system filesystem : <warnings>off <target-os>windows:<source>shell32 ;

rule test-options ( name )
{
    if "--boost-process-report-ci" in [ modules.peek : ARGV ]
    {
        return --log_sink=log_$(name).xml --log_format=XML --log_level=error --report_sink=report_$(name).xml --report_format=XML --report_level=detailed -- ;
    }
    else
    {
        return --log_level=error --report_level=detailed -- ;
    }

}


test-suite bare :
    [ compile no_ansi_apps.cpp ]
    [ compile-fail spawn_fail.cpp        ]
    [ compile-fail async_system_fail.cpp ]
    [ compile asio_no_deprecated.cpp ]
    ;

test-suite with-valgrind :
    [ run group.cpp     system thread filesystem              : [ test-options group ] : sub_launch ]
    [ run group_wait.cpp     system thread filesystem         : [ test-options group_wait ] : sparring_partner ]

   : <dependency>bare ;

